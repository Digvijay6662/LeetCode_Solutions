3133. Minimum Array End
Solved
Medium
Companies
Hint
You are given two integers n and x. You have to construct an array of positive integers nums of size n where for every 0 <= i < n - 1, nums[i + 1] is greater than nums[i], and the result of the bitwise AND operation between all elements of nums is x.

Return the minimum possible value of nums[n - 1].

 

Example 1:

Input: n = 3, x = 4

Output: 6

Explanation:

nums can be [4,5,6] and its last element is 6.

Example 2:

Input: n = 2, x = 7

Output: 15

Explanation:

nums can be [7,15] and its last element is 15.

 

Constraints:

1 <= n, x <= 108


Solution 1:

class Solution:
    def minEnd(self, n: int, x: int) -> int:
        n -= 1
        result = x
        bit_pos = 0

        # Strategically fill 0-bits in x with bits from n to minimize result
        while n > 0:
            # Identify 0-bits in x that need filling
            if (x & 1) == 0:
                # Fill 0-bit in x with corresponding bit from n
                result |= ((n & 1) << bit_pos)
                # Consume current bit in n
                n >>= 1
            
            # Shift x to examine next bit position
            x >>= 1
            # Increment bit position (moving from LSB to MSB)
            bit_pos += 1

        return result