647. Palindromic Substrings
Medium
9K
189
Companies
Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.

 

Example 1:

Input: s = "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".
Example 2:

Input: s = "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".
 

Constraints:

1 <= s.length <= 1000
s consists of lowercase English letters.

Solution :

class Solution:
    def countSubstrings(self, s: str) -> int:
        n = len(s)
        count = 0

        for i in range(n):
            l = r = i
            while l>=0 and r<n and s[l]==s[r]:
                count+=1
                l-=1
                r+=1

            l, r = i, i+1
            while l>=0 and r<n and s[l]==s[r]:
                count+=1
                l-=1
                r+=1

        return count


Solution 2:

class Solution:
    def countSubstrings(self, s: str) -> int:
        n = len(s)
        count = 0

        def countPalindrome(l, r):
            while l>=0 and r<n and s[l]==s[r]:
                nonlocal count
                count+=1
                l-=1
                r+=1

        for i in range(n):
            countPalindrome(i, i)
            countPalindrome(i, i+1)

        return count