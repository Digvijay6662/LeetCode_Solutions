3307. Find the K-th Character in String Game II
Solved
Hard
Companies
Hint
Alice and Bob are playing a game. Initially, Alice has a string word = "a".

You are given a positive integer k. You are also given an integer array operations, where operations[i] represents the type of the ith operation.

Now Bob will ask Alice to perform all operations in sequence:

If operations[i] == 0, append a copy of word to itself.
If operations[i] == 1, generate a new string by changing each character in word to its next character in the English alphabet, and append it to the original word. For example, performing the operation on "c" generates "cd" and performing the operation on "zb" generates "zbac".
Return the value of the kth character in word after performing all the operations.

Note that the character 'z' can be changed to 'a' in the second type of operation.

 

Example 1:

Input: k = 5, operations = [0,0,0]

Output: "a"

Explanation:

Initially, word == "a". Alice performs the three operations as follows:

Appends "a" to "a", word becomes "aa".
Appends "aa" to "aa", word becomes "aaaa".
Appends "aaaa" to "aaaa", word becomes "aaaaaaaa".
Example 2:

Input: k = 10, operations = [0,1,0,1]

Output: "b"

Explanation:

Initially, word == "a". Alice performs the four operations as follows:

Appends "a" to "a", word becomes "aa".
Appends "bb" to "aa", word becomes "aabb".
Appends "aabb" to "aabb", word becomes "aabbaabb".
Appends "bbccbbcc" to "aabbaabb", word becomes "aabbaabbbbccbbcc".
 

Constraints:

1 <= k <= 1014
1 <= operations.length <= 100
operations[i] is either 0 or 1.
The input is generated such that word has at least k characters after all operations.


Solution 1:

class Solution:
    def kthCharacter(self, k: int, operations: List[int]) -> str:
        if k == 1:
            return 'a'

        length = 1
        curr_op = -1
        ans = 'a'

        for op in operations:
            curr_op = op
            length *= 2
            
            if length >= k:
                ans = self.kthCharacter(k - length//2, operations)
                break

        if curr_op == 0:
            return ans
        return 'a' if ans == 'z' else chr(ord(ans) + 1)


Solution 2:

class Solution:
    def kthCharacter(self, k: int, operations: List[int]) -> str:
        # Start with the initial character
        char = 'a'
        # Calculate the final length of the string after all operations
        length = 1  # Start with initial length of word = "a"

        # Determine the length of the resulting string after all operations
        for op in operations:
            length *= 2

        # Traverse the operations in reverse order to find the character at position k
        for op in reversed(operations):
            half_length = length // 2

            if k > half_length:
                # If k is in the second half, move it to the corresponding position in the first half
                k -= half_length
                # If the operation is type 1, increment the character
                if op == 1:
                    char = 'a' if char == 'z' else chr(ord(char) + 1)

            # Halve the length as we move backwards
            length = half_length

        return char
