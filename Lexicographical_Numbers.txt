386. Lexicographical Numbers
Solved
Medium
Topics
Companies
Given an integer n, return all the numbers in the range [1, n] sorted in lexicographical order.

You must write an algorithm that runs in O(n) time and uses O(1) extra space. 

 

Example 1:

Input: n = 13
Output: [1,10,11,12,13,2,3,4,5,6,7,8,9]
Example 2:

Input: n = 2
Output: [1,2]
 

Constraints:

1 <= n <= 5 * 104


Solution 1:

class Solution:
    def lexicalOrder(self, n: int) -> List[int]:
        result = []
        
        def solve(current_number, limit):
            if current_number > n:
                return

            result.append(current_number)
            
            for next_digit in range(10):
                next_number = current_number * 10 + next_digit
                if next_number <= n:
                    solve(next_number, limit)
                else:
                    break
        
        for start in range(1, 10):
            solve(start, n)
            
        return result


Solution 2:

class Solution:
    def lexicalOrder(self, n: int) -> List[int]:
        result = []
        current = 1
        
        for _ in range(n):
            result.append(current)

            if current * 10 <= n:
                current *= 10
            else:
                if current >= n:
                    current //= 10
                current += 1
                while current % 10 == 0:
                    current //= 10
        
        return result