1781. Sum of Beauty of All Substrings
Solved
Medium
Topics
Companies
Hint
The beauty of a string is the difference in frequencies between the most frequent and least frequent characters.

For example, the beauty of "abaacc" is 3 - 1 = 2.
Given a string s, return the sum of beauty of all of its substrings.

 

Example 1:

Input: s = "aabcb"
Output: 5
Explanation: The substrings with non-zero beauty are ["aab","aabc","aabcb","abcb","bcb"], each with beauty equal to 1.
Example 2:

Input: s = "aabcbaa"
Output: 17
 

Constraints:

1 <= s.length <= 500
s consists of only lowercase English letters.


Solution 1:

class Solution:
    def beautySum(self, s: str) -> int:
        n = len(s)
        result = 0

        for i in range(n):
            freq = [0] * 26
            max_freq, min_freq = 0, float('inf')

            for j in range(i, n):
                idx = ord(s[j]) - ord('a')
                freq[idx] += 1
                max_freq = max(max_freq, freq[idx])
                min_freq = min(val for val in freq if val > 0)

                result += max_freq - min_freq

        return result
