1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold
Solved
Medium
Topics
Companies
Hint
Given a m x n matrix mat and an integer threshold, return the maximum side-length of a square with a sum less than or equal to threshold or return 0 if there is no such square.

 

Example 1:


Input: mat = [[1,1,3,2,4,3,2],[1,1,3,2,4,3,2],[1,1,3,2,4,3,2]], threshold = 4
Output: 2
Explanation: The maximum side length of square with sum less than 4 is 2 as shown.
Example 2:

Input: mat = [[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2]], threshold = 1
Output: 0
 

Constraints:

m == mat.length
n == mat[i].length
1 <= m, n <= 300
0 <= mat[i][j] <= 104
0 <= threshold <= 105


Solution 1:

class Solution:
    def maxSideLength(self, mat: List[List[int]], threshold: int) -> int:
        rows, cols = len(mat), len(mat[0])
        prefix_sum = [[0 for _ in range(cols + 1)] for _ in range(rows + 1)]

        for i in range(1, rows + 1):
            for j in range(1, cols + 1):
                prefix_sum[i][j] = mat[i - 1][j - 1] + prefix_sum[i - 1][j] + \
                                   prefix_sum[i][j - 1] - prefix_sum[i - 1][j - 1]

        def check(length):
            for i in range(rows - length + 1):
                for j in range(cols - length + 1):
                    total = prefix_sum[i + length][j + length] - prefix_sum[i][j + length] - \
                            prefix_sum[i + length][j] + prefix_sum[i][j]

                    if total <= threshold:
                        return True

            return False

        left, right = 0, min(rows, cols)
        while left <= right:
            mid = left + (right - left)//2

            if check(mid):
                left = mid + 1
            else:
                right = mid - 1
        
        return right


Solution 2:

class Solution:
    def maxSideLength(self, mat: List[List[int]], threshold: int) -> int:
        n, m = len(mat), len(mat[0])
        prefix_sum = [[0] * (m + 1) for _ in range(n + 1)]
        max_side_length = 0

        for i in range(n):
            for j in range(m):
                prefix_sum[i + 1][j + 1] = (
                    prefix_sum[i + 1][j] + prefix_sum[i][j + 1] - prefix_sum[i][j] + mat[i][j]
                )

                if (
                    i - max_side_length >= 0
                    and j - max_side_length >= 0
                    and prefix_sum[i + 1][j + 1] - prefix_sum[i - max_side_length][j + 1]
                    - prefix_sum[i + 1][j - max_side_length]
                    + prefix_sum[i - max_side_length][j - max_side_length]
                    <= threshold
                ):
                    max_side_length += 1

        return max_side_length