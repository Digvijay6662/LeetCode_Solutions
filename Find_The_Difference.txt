389. Find the Difference
Easy
4.2K
442
Companies
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.


Solution 1:

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        countMap = {}

        for ch in t:
            countMap[ch] = countMap.get(ch, 0) + 1

        for ch in s:
            countMap[ch] -= 1
        
        for key, val in countMap.items():
            if val != 0:
                return key


Solution 2:

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        countMap = {}

        for ch in s:
            countMap[ch] = countMap.get(ch, 0) + 1

        for ch in t:
            if ch not in countMap:
                return ch
            countMap[ch] -= 1
            if countMap[ch] < 0:
                return ch


Solution 3:


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        charSum = 0

        for ch in t:
            charSum += ord(ch)

        for ch in s:
            charSum -= ord(ch)

        return chr(charSum)


Solution 4:

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        res = 0

        for i in range(len(s)):
            res ^= ord(s[i])
            res ^= ord(t[i])

        res ^= ord(t[-1])

        return chr(res)
