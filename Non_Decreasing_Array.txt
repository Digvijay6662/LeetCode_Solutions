665. Non-decreasing Array
Solved
Medium
Topics
Companies
Given an array nums with n integers, your task is to check if it could become non-decreasing by modifying at most one element.

We define an array is non-decreasing if nums[i] <= nums[i + 1] holds for every i (0-based) such that (0 <= i <= n - 2).

 

Example 1:

Input: nums = [4,2,3]
Output: true
Explanation: You could modify the first 4 to 1 to get a non-decreasing array.
Example 2:

Input: nums = [4,2,1]
Output: false
Explanation: You cannot get a non-decreasing array by modifying at most one element.
 

Constraints:

n == nums.length
1 <= n <= 104
-105 <= nums[i] <= 105


Solution 1:

class Solution:
    def checkPossibility(self, nums: List[int]) -> bool:
        n = len(nums)
        changed = False

        for i in range(n - 1):
            if nums[i] > nums[i + 1]:
                if changed:
                    return False
                else:
                    if i == 0 or nums[i + 1] >= nums[i - 1]:
                        nums[i] = nums[i + 1]
                    else:
                        nums[i + 1] = nums[i]
                    changed = True

        return True 


Solution 2:

class Solution:
    def checkPossibility(self, nums: List[int]) -> bool:
        n = len(nums)
        count = 0

        for i in range(n - 1):
            if nums[i] > nums[i + 1]:
                count += 1
                if count > 1 or (
                    i - 1 >= 0 and nums[i - 1] > nums[i + 1] and i + 2 < n and nums[i] > nums[i + 2]):
                    return False
        return True