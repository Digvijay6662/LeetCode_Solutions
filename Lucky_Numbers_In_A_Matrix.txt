1380. Lucky Numbers in a Matrix
Solved
Easy
Topics
Companies
Hint
Given an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order.

A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.

 

Example 1:

Input: matrix = [[3,7,8],[9,11,13],[15,16,17]]
Output: [15]
Explanation: 15 is the only lucky number since it is the minimum in its row and the maximum in its column.
Example 2:

Input: matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]
Output: [12]
Explanation: 12 is the only lucky number since it is the minimum in its row and the maximum in its column.
Example 3:

Input: matrix = [[7,8],[1,2]]
Output: [7]
Explanation: 7 is the only lucky number since it is the minimum in its row and the maximum in its column.
 

Constraints:

m == mat.length
n == mat[i].length
1 <= n, m <= 50
1 <= matrix[i][j] <= 105.
All elements in the matrix are distinct.


Solution 1:

class Solution:
    def luckyNumbers (self, matrix: List[List[int]]) -> List[int]:
        n, m = len(matrix), len(matrix[0])
        result = []

        for i in range(n):
            for j in range(m):
                element = matrix[i][j]
                flag = True

                for r in range(n):
                    if element < matrix[r][j]:
                        flag = False
                        break


                for c in range(m):
                    if element > matrix[i][c]:
                        flag = False
                        break
                    
                if flag:
                    result.append(element)
        
        return result


Solution 2:

class Solution:
    def luckyNumbers (self, matrix: List[List[int]]) -> List[int]:
        n, m = len(matrix), len(matrix[0])
        row_min = [float('inf')] * n
        col_max = [float('-inf')] * m

        for i in range(n):
            for j in range(m):
                row_min[i] = min(row_min[i], matrix[i][j])
                col_max[j] = max(col_max[j], matrix[i][j])

        result = []
        for i in range(n):
            for j in range(m):
                if matrix[i][j] == row_min[i] == col_max[j]:
                    result.append(matrix[i][j])

        return result
