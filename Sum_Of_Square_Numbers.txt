633. Sum of Square Numbers
Solved
Medium
Topics
Companies
Given a non-negative integer c, decide whether there're two integers a and b such that a2 + b2 = c.

 

Example 1:

Input: c = 5
Output: true
Explanation: 1 * 1 + 2 * 2 = 5
Example 2:

Input: c = 3
Output: false
 

Constraints:

0 <= c <= 231 - 1


Solution 1:

class Solution:
    def judgeSquareSum(self, c: int) -> bool:
        squares = []
        s = 0

        while s * s <= c:
            squares.append(s * s)
            s += 1

        l, r = 0, len(squares) - 1
        
        while l <= r:
            curr_square = squares[l] + squares[r]
            if curr_square == c:
                return True
            elif curr_square < c:
                l += 1
            else:
                r -= 1

        return False


Solution 2:

class Solution:
    def judgeSquareSum(self, c: int) -> bool:
        left = 0
        right = int(c**0.5)

        while left <= right:
            cur_sum = left*left + right*right
            if cur_sum == c:
                return True
            elif cur_sum < c:
                left += 1
            else:
                right -= 1

        return False
