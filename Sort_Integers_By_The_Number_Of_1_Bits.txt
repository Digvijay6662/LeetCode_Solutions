1356. Sort Integers by The Number of 1 Bits
Solved
Easy
Topics
Companies
Hint
You are given an integer array arr. Sort the integers in the array in ascending order by the number of 1's in their binary representation and in case of two or more integers have the same number of 1's you have to sort them in ascending order.

Return the array after sorting it.

 

Example 1:

Input: arr = [0,1,2,3,4,5,6,7,8]
Output: [0,1,2,4,8,3,5,6,7]
Explantion: [0] is the only integer with 0 bits.
[1,2,4,8] all have 1 bit.
[3,5,6] have 2 bits.
[7] has 3 bits.
The sorted array by bits is [0,1,2,4,8,3,5,6,7]
Example 2:

Input: arr = [1024,512,256,128,64,32,16,8,4,2,1]
Output: [1,2,4,8,16,32,64,128,256,512,1024]
Explantion: All integers have 1 bit in the binary representation, you should just sort them in ascending order.
 

Constraints:

1 <= arr.length <= 500
0 <= arr[i] <= 104


Solution 1:

class Solution:
    def sortByBits(self, arr: List[int]) -> List[int]:
        n = len(arr)

        def count_ones(val):
            return bin(val).count('1')

        arr.sort(key=lambda x: (count_ones(x), x))

        return arr


Solution 2:

class Solution:
    def sortByBits(self, arr: List[int]) -> List[int]:
        n = len(arr)
        countPair = []

        for val in arr:
            countPair.append([val, val.bit_count()])
            
        countPair.sort(key = lambda x: (x[1], x[0]))

        return [c[0] for c in countPair]


Solution 3:

class Solution:
    def sortByBits(self, arr: List[int]) -> List[int]:
        n = len(arr)

        def count_ones(val):
            mask = 1
            count = 0

            while val:
                if val & mask:
                    val ^= mask
                    count += 1

                mask <<= 1

            return count

        arr.sort(key=lambda x: (count_ones(x), x))

        return arr


Solution 4:

class Solution:
    def sortByBits(self, arr: List[int]) -> List[int]:
        n = len(arr)

        def count_ones(val):
            count = 0

            while val:
                count += 1
                val = val & (val - 1)

            return count

        arr.sort(key=lambda x: (count_ones(x), x))

        return arr