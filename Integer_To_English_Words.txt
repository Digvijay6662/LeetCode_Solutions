273. Integer to English Words
Solved
Hard
Topics
Companies
Hint
Convert a non-negative integer num to its English words representation.

 

Example 1:

Input: num = 123
Output: "One Hundred Twenty Three"
Example 2:

Input: num = 12345
Output: "Twelve Thousand Three Hundred Forty Five"
Example 3:

Input: num = 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
 

Constraints:

0 <= num <= 231 - 1


Solution 1:

class Solution:
    def numberToWords(self, num: int) -> str:
        if num == 0:
            return "Zero"

        hashMap = {
            0: "",
            1: "One",
            2: "Two",
            3: "Three",
            4: "Four",
            5: "Five",
            6: "Six",
            7: "Seven",
            8: "Eight",
            9: "Nine",
            10: "Ten",
            11: "Eleven",
            12: "Twelve",
            13: "Thirteen",
            14: "Fourteen",
            15: "Fifteen",
            16: "Sixteen",
            17: "Seventeen",
            18: "Eighteen",
            19: "Nineteen",
            20: "Twenty",
            30: "Thirty",
            40: "Forty",
            50: "Fifty",
            60: "Sixty",
            70: "Seventy",
            80: "Eighty",
            90: "Ninety"
        }

        powers = [1000000000, 1000000, 1000, 100]
        english = ["Billion", "Million", "Thousand", "Hundred"]

        def solve(n):
            string = ""

            if n in hashMap:
                return hashMap[n]

            if n < 100:
                string += solve(n // 10 * 10)
                string += " "
                string += solve(n % 10)
                return string

            for i in range(4):
                if n < powers[i]:
                    continue
                string += solve(n // powers[i])
                string += " "
                string += english[i]
                string += " "
                string += solve(n % powers[i])
                break

            return string.strip()

        return solve(num)


Solution 2:


class Solution:
    def numberToWords(self, num: int) -> str:
        ones = ['', ' One', ' Two', ' Three', ' Four', ' Five', ' Six', ' Seven', ' Eight', ' Nine', ' Ten', ' Eleven', ' Twelve', ' Thirteen', ' Fourteen', ' Fifteen', ' Sixteen', ' Seventeen', ' Eighteen', ' Nineteen']
        tens = ['', ' Ten', ' Twenty', ' Thirty', ' Forty', ' Fifty', ' Sixty', ' Seventy', ' Eighty', ' Ninety']
        thousands = ['', ' Thousand', ' Million', ' Billion']

        def solve(n):
            if n < 20:
                return ones[n]
            elif n < 100:
                return tens[n // 10] + solve(n % 10)
            elif n < 1000:
                return solve(n // 100) + ' Hundred' + solve(n % 100)
            else:
                for i in range(3, 0, -1):
                    if n >= 1000 ** i:
                        return solve(n // (1000 ** i)) + thousands[i] + solve(n % (1000 ** i))
            return ''

        if num == 0:
            return 'Zero'

        return solve(num).strip()

