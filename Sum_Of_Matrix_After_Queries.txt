2718. Sum of Matrix After Queries
Medium
385
17
Companies
You are given an integer n and a 0-indexed 2D array queries where queries[i] = [typei, indexi, vali].

Initially, there is a 0-indexed n x n matrix filled with 0's. For each query, you must apply one of the following changes:

if typei == 0, set the values in the row with indexi to vali, overwriting any previous values.
if typei == 1, set the values in the column with indexi to vali, overwriting any previous values.
Return the sum of integers in the matrix after all queries are applied.

 

Example 1:


Input: n = 3, queries = [[0,0,1],[1,2,2],[0,2,3],[1,0,4]]
Output: 23
Explanation: The image above describes the matrix after each query. The sum of the matrix after all queries are applied is 23. 
Example 2:


Input: n = 3, queries = [[0,0,4],[0,1,2],[1,0,1],[0,2,3],[1,2,1]]
Output: 17
Explanation: The image above describes the matrix after each query. The sum of the matrix after all queries are applied is 17.
 

Constraints:

1 <= n <= 104
1 <= queries.length <= 5 * 104
queries[i].length == 3
0 <= typei <= 1
0 <= indexi < n
0 <= vali <= 105


Solution 1:


class Solution:
    def matrixSumQueries(self, n: int, queries: List[List[int]]) -> int:
        
        rowSet = set()
        colSet = set()
        total = 0
        
        for q in range(len(queries) - 1, -1, -1):
            t, i, v = queries[q]
            
            if t == 0:
                if i in rowSet:
                    continue
                
                rowSet.add(i)
                total += v * (n - len(colSet))
            else:
                if i in colSet:
                    continue
                
                colSet.add(i)
                total += v * (n - len(rowSet))

            if len(rowSet) == n and len(colSet) == n:
                break
                
        return total

Solution 2:

class Solution:
    def matrixSumQueries(self, n: int, queries: List[List[int]]) -> int:
        
        rows = [False] * n
        cols = [False] * n
        total = 0
        rowCount = 0
        colCount = 0

        for q in range(len(queries) - 1, -1, -1):
            t, i, v = queries[q]

            if t == 0 and not rows[i]:
                rows[i] = True
                rowCount += 1
                total += v * (n - colCount)
            elif t == 1 and not cols[i]:
                cols[i] = True
                colCount += 1
                total += v * (n - rowCount)

            if rowCount == n and colCount == n:
                break
                
        return total

