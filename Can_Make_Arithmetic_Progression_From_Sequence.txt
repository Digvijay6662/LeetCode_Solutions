1502. Can Make Arithmetic Progression From Sequence
Easy
1.7K
81
Companies
A sequence of numbers is called an arithmetic progression if the difference between any two consecutive elements is the same.

Given an array of numbers arr, return true if the array can be rearranged to form an arithmetic progression. Otherwise, return false.

 

Example 1:

Input: arr = [3,5,1]
Output: true
Explanation: We can reorder the elements as [1,3,5] or [5,3,1] with differences 2 and -2 respectively, between each consecutive elements.
Example 2:

Input: arr = [1,2,4]
Output: false
Explanation: There is no way to reorder the elements to obtain an arithmetic progression.
 

Constraints:

2 <= arr.length <= 1000
-106 <= arr[i] <= 106

Solution 1:

class Solution:
    def canMakeArithmeticProgression(self, arr: List[int]) -> bool:

        arr.sort()
        
        for i in range(1, len(arr) - 1):
            if  arr[i] - arr[i - 1] != arr[i + 1] - arr[i]:
                return False

        return True


Solution 2:

class Solution:
    def canMakeArithmeticProgression(self, arr: List[int]) -> bool:
        minVal, maxVal = min(arr), max(arr)
        n = len(arr)
        
        if maxVal - minVal == 0:
            return True

        if (maxVal - minVal) % (n - 1) != 0:
            return False
        
        diff = (maxVal - minVal) // (n - 1)
        ap = set()
        
        for a in arr:
            if (a - minVal) % diff != 0:
                return False
            ap.add(a)
        
        return len(ap) == n

Solution 3:

class Solution:
    def canMakeArithmeticProgression(self, arr: List[int]) -> bool:
        minVal, maxVal = min(arr), max(arr)
        n = len(arr)
        
        if maxVal - minVal == 0:
            return True

        if (maxVal - minVal) % (n - 1) != 0:
            return False
        
        diff = (maxVal - minVal) // (n - 1)
        i = 0

        while i < n:        
            if (arr[i] - minVal) % diff != 0:
                return False
            elif arr[i] == minVal + i * diff:
                i += 1
            else:
                j = (arr[i] - minVal)//diff

                if arr[i] == arr[j]:
                    return False

                arr[i], arr[j] = arr[j], arr[i]


        return True


