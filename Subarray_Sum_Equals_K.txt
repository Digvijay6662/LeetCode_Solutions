560. Subarray Sum Equals K
Solved
Medium
Topics
Companies
Hint
Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2
 

Constraints:

1 <= nums.length <= 2 * 104
-1000 <= nums[i] <= 1000
-107 <= k <= 107


Solution 1:

class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        n = len(nums)
        prefixSum = [0] * n
        prefixSum[0] = nums[0]

        for i in range(1, n):
            prefixSum[i] = prefixSum[i - 1] + nums[i]

        count = 0
        sum_count = {0: 1}
        for i in range(n):
            if prefixSum[i] - k in sum_count:
                count += sum_count[prefixSum[i] - k]
            
            if prefixSum[i] in sum_count:
                sum_count[prefixSum[i]] += 1
            else:
                sum_count[prefixSum[i]] = 1

        return count


Solution 2:

class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        n = len(nums)
        total = 0
        count = 0
        sum_count = {0: 1}
        for i in range(n):
            total += nums[i]
            if total - k in sum_count:
                count += sum_count[total - k]
            
            if total in sum_count:
                sum_count[total] += 1
            else:
                sum_count[total] = 1

        return count