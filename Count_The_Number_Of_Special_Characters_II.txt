3121. Count the Number of Special Characters II
Solved
Medium
Companies
Hint
You are given a string word. A letter c is called special if it appears both in lowercase and uppercase in word, and every lowercase occurrence of c appears before the first uppercase occurrence of c.

Return the number of special letters in word.

 

Example 1:

Input: word = "aaAbcBC"

Output: 3

Explanation:

The special characters are 'a', 'b', and 'c'.

Example 2:

Input: word = "abc"

Output: 0

Explanation:

There are no special characters in word.

Example 3:

Input: word = "AbBCab"

Output: 0

Explanation:

There are no special characters in word.

 

Constraints:

1 <= word.length <= 2 * 105
word consists of only lowercase and uppercase English letters.


Solution 1:

class Solution:
    def numberOfSpecialChars(self, word: str) -> int:
        count_lowercase = defaultdict(int)
        uppercase = set()
        result = 0
        
        for char in word:
            if char.islower():
                count_lowercase[char] += 1
            else:
                uppercase.add(char.lower())
                
        for char in word:
            if char.islower():
                count_lowercase[char] -= 1
                
                if count_lowercase[char] == 0:
                    if char in uppercase:
                        result += 1
                        uppercase.remove(char)
            else:
                uppercase.discard(char.lower()) 
                        
        return result


Solution 2:

class Solution:
    def numberOfSpecialChars(self, word: str) -> int:
        n = len(word)
        lowercase = [-1] * 26
        uppercase = [-1] * 26

        for i in range(n):
            ch = word[i]
            if ch.islower():
                lowercase[ord(ch) - ord('a')] = i
            elif uppercase[ord(ch) - ord('A')] == -1:
                uppercase[ord(ch) - ord('A')] = i

        result = 0
        for i in range(26):
            if lowercase[i] != -1 and uppercase[i] != -1 and lowercase[i] < uppercase[i]:
                result += 1

        return result