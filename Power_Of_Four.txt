342. Power of Four
Solved
Easy
Topics
Companies
Given an integer n, return true if it is a power of four. Otherwise, return false.

An integer n is a power of four, if there exists an integer x such that n == 4x.

 

Example 1:

Input: n = 16
Output: true
Example 2:

Input: n = 5
Output: false
Example 3:

Input: n = 1
Output: true
 

Constraints:

-231 <= n <= 231 - 1
 

Follow up: Could you solve it without loops/recursion?


Solution 1:

class Solution:
    def isPowerOfFour(self, n: int) -> bool:
        if n <= 0:
            return False
        
        while n % 4 == 0:
            n = n // 4
        
        return n == 1


Solution 2:

class Solution:
    def isPowerOfFour(self, n: int) -> bool:
        if n <= 0:
            return False

        return n & (n - 1) == 0 and n & 0x55555555 == n


Solution 3:


class Solution:
    def isPowerOfFour(self, n: int) -> bool:
        if n <= 0:
            return False

        return n & (n - 1) == 0 and n & 0xaaaaaaaa == 0


Solution 4:

class Solution:
    def isPowerOfFour(self, n: int) -> bool:
        if n <= 0:
            return False
        x = log(n, 4)
        return x % 1 == 0


Solution 5:

class Solution:
    def isPowerOfFour(self, n: int) -> bool:
        if n <= 0:
            return False
        x = log(n) / log(4)
        return x % 1 == 0
