440. K-th Smallest in Lexicographical Order
Solved
Hard
Topics
Companies
Given two integers n and k, return the kth lexicographically smallest integer in the range [1, n].

 

Example 1:

Input: n = 13, k = 2
Output: 10
Explanation: The lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.
Example 2:

Input: n = 1, k = 1
Output: 1
 

Constraints:

1 <= k <= n <= 109


Solution 1:

class Solution:
    def findKthNumber(self, n: int, k: int) -> int:

        def countSteps(prefix, n):
            curr, next = prefix, prefix + 1
            cnt = 0
            
            while curr <= n:
                cnt += next - curr
                curr *= 10
                next *= 10
                next = min(next, n + 1)

            return cnt

        current = 1 # Start with the current prefix (initially 1)
        k -= 1  # Convert k to 0-based index
        
        while k > 0:
            steps = countSteps(current, n)
            if steps <= k:
                # Move to the next sibling (current + 1)
                current += 1
                k -= steps
            else:
                # Move to the next level, i.e., deeper into the current prefix
                current *= 10
                k -= 1
        
        return current