2441. Largest Positive Integer That Exists With Its Negative
Solved
Easy
Topics
Companies
Hint
Given an integer array nums that does not contain any zeros, find the largest positive integer k such that -k also exists in the array.

Return the positive integer k. If there is no such integer, return -1.

 

Example 1:

Input: nums = [-1,2,-3,3]
Output: 3
Explanation: 3 is the only valid k we can find in the array.
Example 2:

Input: nums = [-1,10,6,7,-7,1]
Output: 7
Explanation: Both 1 and 7 have their corresponding negative values in the array. 7 has a larger value.
Example 3:

Input: nums = [-10,8,6,7,-2,-3]
Output: -1
Explanation: There is no a single valid k, we return -1.
 

Constraints:

1 <= nums.length <= 1000
-1000 <= nums[i] <= 1000
nums[i] != 0


Solution 1:

class Solution:
    def findMaxK(self, nums: List[int]) -> int:
        n = len(nums)
        nums.sort()
        l, r = 0, n - 1

        while l < r:
            if -nums[l] == nums[r]:
                return nums[r]
            elif -nums[l] > nums[r]:
                l += 1
            else:
                r -= 1

        return -1


Solution 2:

class Solution:
    def findMaxK(self, nums: List[int]) -> int:
        num_set = set(nums)
        result = -1

        for num in num_set:
            if -num in num_set:
                result = max(result, abs(num))

        return result


Solution 3:

class Solution:
    def findMaxK(self, nums: List[int]) -> int:
        num_set = set()
        result = -1

        for num in nums:
            if -num in num_set:
                result = max(result, abs(num))
            num_set.add(num)

        return result

