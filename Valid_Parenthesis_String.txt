678. Valid Parenthesis String
Medium
4.6K
114
Companies
Given a string s containing only three types of characters: '(', ')' and '*', return true if s is valid.

The following rules define a valid string:

Any left parenthesis '(' must have a corresponding right parenthesis ')'.
Any right parenthesis ')' must have a corresponding left parenthesis '('.
Left parenthesis '(' must go before the corresponding right parenthesis ')'.
'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string "".
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "(*)"
Output: true
Example 3:

Input: s = "(*))"
Output: true
 

Constraints:

1 <= s.length <= 100
s[i] is '(', ')' or '*'.


Solution 1:

class Solution:
    def checkValidString(self, s: str) -> bool:
        n = len(s)
        dp = {}

        def solve(i, left):
            if i == n:
                return left == 0

            if (i, left) in dp:
                return dp[(i, left)]

            if left < 0:
                dp[(i, left)] = False
                return False

            if s[i] == '(':
                dp[(i, left)] = solve(i + 1, left + 1)
            elif s[i] == ')':
                dp[(i, left)] = solve(i + 1, left - 1)
            else:
                dp[(i, left)] = solve(i + 1, left + 1) or solve(i + 1, left - 1) or solve(i + 1, left)

            return dp[(i, left)]

        return solve(0, 0)


Solution 2:

class Solution:
    def checkValidString(self, s: str) -> bool:
        leftMin, leftMax = 0, 0

        for c in s:
            if c == '(':
                leftMin, leftMax = leftMin + 1, leftMax + 1
            elif c == ')':
                leftMin, leftMax = leftMin - 1, leftMax - 1
            else:
                leftMin, leftMax = leftMin - 1, leftMax + 1
                
            if leftMax < 0:
                return False

            if leftMin < 0:
                leftMin = 0

        return leftMin == 0

