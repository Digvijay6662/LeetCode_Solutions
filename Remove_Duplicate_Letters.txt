316. Remove Duplicate Letters
Medium
7.5K
489
Companies
Given a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is 
the smallest in lexicographical order
 among all possible results.

 

Example 1:

Input: s = "bcabc"
Output: "abc"
Example 2:

Input: s = "cbacdcbc"
Output: "acdb"
 

Constraints:

1 <= s.length <= 104
s consists of lowercase English letters.
 

Note: This question is the same as 1081: https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/


Solution 1:

class Solution:
    def removeDuplicateLetters(self, s: str) -> str:
        n = len(s)
        indices = [0] * 26
        visited = set()

        for i in range(n):
            ch = ord(s[i]) - ord('a')
            indices[ch] = i
        
        stack = []
        for i in range(n):
            ch = s[i]
            if ch in visited:
                continue

            visited.add(ch)
            while stack and stack[-1] > ch and indices[ord(stack[-1]) - ord('a')] > i:
                visited.remove(stack[-1])
                stack.pop()

            stack.append(ch)

        return ''.join(stack)