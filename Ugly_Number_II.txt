264. Ugly Number II
Solved
Medium
Topics
Companies
Hint
An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.

Given an integer n, return the nth ugly number.

 

Example 1:

Input: n = 10
Output: 12
Explanation: [1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.
Example 2:

Input: n = 1
Output: 1
Explanation: 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.
 

Constraints:

1 <= n <= 1690


Solution 1:

class Solution:
    def nthUglyNumber(self, n: int) -> int:
        dp = [0] * n
        dp[0] = 1
        i1 = i2 = i3 = 0

        for i in range(1, n):
            num1 = dp[i1] * 2
            num2 = dp[i2] * 3
            num3 = dp[i3] * 5
            ugly_number = min(num1, num2, num3)

            if num1 == ugly_number:
                i1 += 1
            if num2 == ugly_number:
                i2 += 1
            if num3 == ugly_number:
                i3 += 1

            dp[i] = ugly_number

        return dp[-1]
