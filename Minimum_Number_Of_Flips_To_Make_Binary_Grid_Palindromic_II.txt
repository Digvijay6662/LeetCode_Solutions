3240. Minimum Number of Flips to Make Binary Grid Palindromic II
Solved
Medium
Topics
Companies
Hint
You are given an m x n binary matrix grid.

A row or column is considered palindromic if its values read the same forward and backward.

You can flip any number of cells in grid from 0 to 1, or from 1 to 0.

Return the minimum number of cells that need to be flipped to make all rows and columns palindromic, and the total number of 1's in grid divisible by 4.

 

Example 1:

Input: grid = [[1,0,0],[0,1,0],[0,0,1]]

Output: 3

Explanation:



Example 2:

Input: grid = [[0,1],[0,1],[0,0]]

Output: 2

Explanation:



Example 3:

Input: grid = [[1],[1]]

Output: 2

Explanation:



 

Constraints:

m == grid.length
n == grid[i].length
1 <= m * n <= 2 * 105
0 <= grid[i][j] <= 1


Solution 1:

class Solution:
    def minFlips(self, grid: List[List[int]]) -> int:
        n, m = len(grid), len(grid[0])
        result = 0

        for i in range(n//2):
            for j in range(m//2):
                same = 1
                if grid[i][j] == grid[i][m - j - 1]:
                    same += 1
                if grid[i][j] == grid[n - i - 1][j]:
                    same += 1
                if grid[i][j] == grid[n - i - 1][m - j - 1]:
                    same += 1

                result += min(same, 4 - same)

        singles = 0  # (1, 0) pair
        pairs = 0    # (1, 1) pair
        if n % 2 == 1:
            i = n // 2
            l, r = 0, m - 1
            while l < r:
                ones  = grid[i][l] + grid[i][r]
                if ones == 1:
                    singles += 1
                elif ones == 2:
                    pairs += 1
                l += 1
                r -= 1   

        if m % 2 == 1:
            j = m // 2
            l, r = 0, n - 1
            while l < r:
                ones = grid[l][j] + grid[r][j]
                if ones == 1:
                    singles += 1
                elif ones == 2:
                    pairs += 1
                l += 1
                r -= 1

        # Middle element always should be zero otherwise sum will be odd
        if m % 2 == 1 and n % 2 == 1:
            i = n//2
            j = m//2

            if grid[i][j] == 1:
                result += 1

        # If pairs is even, the total number of 1s is already a multiple of 4.
        # We can change every (1, 0) pair to (0, 0) if there's any.
        # If pairs is odd, but we have (1, 0) pairs, convert one (1, 0) to (1, 1).
        if pairs % 2 == 0 or singles > 0:
            return result + singles

        # If the number of (1, 1) pairs is odd and there are no (1, 0) pairs,
        # We can flip one (1, 1) pair to (0, 0).
        return result + 2