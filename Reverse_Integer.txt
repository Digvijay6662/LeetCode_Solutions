7. Reverse Integer
Medium
11.2K
12.5K
Companies
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1


Solution 1:

class Solution:
    def reverse(self, x: int) -> int:
        reverse = 0
        sign = 1 if x >= 0 else -1
        x = abs(x)

        while x:
            digit = x % 10
            x = x // 10
            reverse = reverse * 10 + digit

        reverse *= sign

        if reverse > 2**31 - 1 or reverse < -2**31:
            return 0

        return reverse
        

Solution 2:

class Solution:
    def reverse(self, x: int) -> int:
        iMin = -2147483648
        iMax = 2147483647

        res = 0
        while x:
            digit = int(math.fmod(x, 10))
            x = int(x / 10)
            if res > iMax // 10 or (res == iMax // 10 and digit > iMax % 10):
                return 0
            if res < int(iMin / 10) or (res == int(iMin / 10) and digit < math.fmod(iMin, 10)):
                return 0
            res = (res * 10) + digit

        return res
        