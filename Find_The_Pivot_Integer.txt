2485. Find the Pivot Integer
Solved
Easy
Topics
Companies
Hint
Given a positive integer n, find the pivot integer x such that:

The sum of all elements between 1 and x inclusively equals the sum of all elements between x and n inclusively.
Return the pivot integer x. If no such integer exists, return -1. It is guaranteed that there will be at most one pivot index for the given input.

 

Example 1:

Input: n = 8
Output: 6
Explanation: 6 is the pivot integer since: 1 + 2 + 3 + 4 + 5 + 6 = 6 + 7 + 8 = 21.
Example 2:

Input: n = 1
Output: 1
Explanation: 1 is the pivot integer since: 1 = 1.
Example 3:

Input: n = 4
Output: -1
Explanation: It can be proved that no such integer exist.
 

Constraints:

1 <= n <= 1000


Solution 1:

class Solution:
    def pivotInteger(self, n: int) -> int:
        def helper(num):
            return num * (num + 1)//2

        for i in range(1, n + 1):
            if helper(i) == helper(n) - helper(i - 1):
                return i

        return -1


Solution 2:

class Solution:
    def pivotInteger(self, n: int) -> int:
        def helper(num):
            return num * (num + 1)//2

        l, r = 1, n
        while l <= r:
            m = l + (r - l)//2
            if helper(m) == helper(n) - helper(m - 1):
                return m
            elif helper(m) < helper(n) - helper(m - 1):
                l = m + 1
            else:
                r = m - 1

        return -1


Solution 3:

class Solution:
    def pivotInteger(self, n: int) -> int:
        left, right = 1, n
        total = n * (n + 1)//2
        
        while left <= right:
            mid = left + (right - left) // 2
            left_sum = mid * (mid + 1) // 2
            right_sum = total - left_sum + mid
            
            if left_sum == right_sum:
                return mid
            elif left_sum < right_sum:
                left = mid + 1
            else:
                right = mid - 1
        
        return -1


Solution 4:

class Solution:
    def pivotInteger(self, n: int) -> int:
        total = n * (n + 1) // 2
        pivot = int(math.sqrt(total))

        return pivot if pivot * pivot == total else -1