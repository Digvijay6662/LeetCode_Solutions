3120. Count the Number of Special Characters I
Solved
Easy
Companies
Hint
You are given a string word. A letter is called special if it appears both in lowercase and uppercase in word.

Return the number of special letters in word.

 

Example 1:

Input: word = "aaAbcBC"

Output: 3

Explanation:

The special characters in word are 'a', 'b', and 'c'.

Example 2:

Input: word = "abc"

Output: 0

Explanation:

No character in word appears in uppercase.

Example 3:

Input: word = "abBCab"

Output: 1

Explanation:

The only special character in word is 'b'.

 

Constraints:

1 <= word.length <= 50
word consists of only lowercase and uppercase English letters.


Solution 1:

class Solution:
    def numberOfSpecialChars(self, word: str) -> int:
        lowercase = set()
        uppercase = set()

        for char in word:
            if char.islower():
                lowercase.add(char)
            else:
                uppercase.add(char.lower())

        return len(lowercase & uppercase)


Solution 2:

class Solution:
    def numberOfSpecialChars(self, word: str) -> int:
        lowercase = 0
        uppercase = 0

        for char in word:
            if char.islower():
                lowercase |= 1 << (ord(char) - ord('a'))
            else:
                uppercase |= 1 << (ord(char.lower()) - ord('a'))

        result = 0
        for i in range(26):
            if (lowercase >> i) & 1 and (uppercase >> i) & 1:
                result += 1

        return result


Solution 3:

class Solution:
    def numberOfSpecialChars(self, word: str) -> int:
        lowercase = 0
        uppercase = 0

        for char in word:
            if char.islower():
                lowercase |= 1 << (ord(char) - ord('a'))
            else:
                uppercase |= 1 << (ord(char.lower()) - ord('a'))

        result = uppercase & lowercase
        count = 0
        
        while result:
            count += 1
            result &= (result - 1)

        return count