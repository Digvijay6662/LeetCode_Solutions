118. Pascal's Triangle
Easy
9.7K
316
Companies
Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
 

Constraints:

1 <= numRows <= 30

Solution:

1. Without math.comb

class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        pascals = []

        for i in range(numRows):
            pascals.append([])
            for j in range(i + 1):
                if j == 0 or j == i:
                    pascals[i].append(1)
                else:
                    pascals[i].append(pascals[i - 1][j - 1] + pascals[i - 1][j])
        return pascals


2. With math.comb

class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        pascals = []

        for i in range(numRows):
            pascals.append([])
            for j in range(i+1):
                pascals[i].append(math.comb(i, j))

        return pascals
