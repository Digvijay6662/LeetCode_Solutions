1015. Smallest Integer Divisible by K
Solved
Medium
Topics
Companies
Hint
Given a positive integer k, you need to find the length of the smallest positive integer n such that n is divisible by k, and n only contains the digit 1.

Return the length of n. If there is no such n, return -1.

Note: n may not fit in a 64-bit signed integer.

 

Example 1:

Input: k = 1
Output: 1
Explanation: The smallest answer is n = 1, which has length 1.
Example 2:

Input: k = 2
Output: -1
Explanation: There is no such positive integer n divisible by 2.
Example 3:

Input: k = 3
Output: 3
Explanation: The smallest answer is n = 111, which has length 3.
 

Constraints:

1 <= k <= 105


Solution 1:

class Solution:
    def smallestRepunitDivByK(self, k: int) -> int:
        if k % 2 == 0 or k % 5 == 0:
            return -1

        visited = set()
        mod = 0
        length = 0

        while True:
            mod = (mod * 10 + 1) % k
            length += 1

            if mod == 0:
                return length
            
            if mod in visited:
                return -1

            visited.add(mod)


Solution 2:

class Solution:
    def smallestRepunitDivByK(self, k: int) -> int:
        if k % 2 == 0 or k % 5 == 0:
            return -1

        remainder = 0
        for length in range(1, k+1):
            remainder = (remainder * 10 + 1) % k

            if remainder == 0:
                return length

        return -1