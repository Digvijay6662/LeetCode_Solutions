779. K-th Symbol in Grammar
Solved
Medium
Topics
Companies
Hint
We build a table of n rows (1-indexed). We start by writing 0 in the 1st row. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.

For example, for n = 3, the 1st row is 0, the 2nd row is 01, and the 3rd row is 0110.
Given two integer n and k, return the kth (1-indexed) symbol in the nth row of a table of n rows.

 

Example 1:

Input: n = 1, k = 1
Output: 0
Explanation: row 1: 0
Example 2:

Input: n = 2, k = 1
Output: 0
Explanation: 
row 1: 0
row 2: 01
Example 3:

Input: n = 2, k = 2
Output: 1
Explanation: 
row 1: 0
row 2: 01
 

Constraints:

1 <= n <= 30
1 <= k <= 2n - 1


Solution 1:

class Solution:
    def kthGrammar(self, n: int, k: int) -> int:

        def dfs(n, k, rootVal):
            if n == 1:
                return rootVal

            total_nodes = 2 ** (n - 1)

            if k > total_nodes // 2:
                nextVal = 1 if rootVal == 0 else 0
                return dfs(n - 1, k - total_nodes // 2, nextVal)

            nextVal = 0 if rootVal == 0 else 1
            return dfs(n - 1, k, nextVal)

        return dfs(n, k, 0)


Solution 2:

class Solution:
    def kthGrammar(self, n: int, k: int) -> int:
        if n == 1:
            return 0
            
        total_nodes = 2 ** (n - 1)

        if k <= total_nodes // 2:
            return self.kthGrammar(n - 1, k)
        else:
            return 1 - self.kthGrammar(n - 1, k - total_nodes // 2)


Solution 3:

class Solution:
    def kthGrammar(self, n: int, k: int) -> int:
        if n == 1:
            return 0

        symbol = 1

        for curr_row in range(n, 1, -1):
            total_elements = 2 ** (curr_row - 1)
            half_elements = total_elements // 2

            if k > half_elements:
                symbol = 1 - symbol
                k -= half_elements

        if symbol != 0:
            return 0

        return 1